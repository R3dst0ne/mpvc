#!/bin/sh
#
# @file mpvc-tui
# @description mpvc tui, terminal user interface
# @author gmt4 <gmt4 at github.com> (c) Copyright 2022.
# @url github.com/gmt4/mpvc
#

PROGNAME=$(basename "$0");
PROGVERSION=v1.0;
PROGURL="https://github.com/gmt4/mpvc"

MPVC_CBLACK='\033[0;30m'
MPVC_CRED='\033[0;31m'
MPVC_CGREEN='\033[0;32m'
MPVC_CGREENL='\033[1;32m'
MPVC_CYELLOW='\033[0;33m'
MPVC_CYELLOWL='\033[1;33m'
MPVC_CBLUE='\033[0;34m'
MPVC_CPURPLE='\033[0;35m'
MPVC_CCYAN='\033[0;36m'
MPVC_CCYANL='\033[1;36m'
MPVC_CWHITE='\033[0;37m'
MPVC_CRST='\033[0m'

# Set TUI defaults
mpvctui_defaults()
{
    MPVC_COLOR0="$MPVC_CGREENL"
    MPVC_COLOR1="$MPVC_CYELLOWL"
    MPVC_UPDATEC=1
    MPVC_CLEARC=4
    MPVC_TERM=xterm
    MPVC_TIPS=true
    export MPVC_CLINE=8
}

# Load user config
mpvctui_config()
{
    MPVC_CONFIG="${MPVC_CONFIG:-$HOME/.config/mpvc/tui.rc}"
    mpvctui_defaults
    # if present load user config
    [ -r "$MPVC_CONFIG" ] && . "$MPVC_CONFIG"
}

# Displays "──[ $@ ]─────────────────────────────────────────────────────"
mpvctui_headerc()
{
    char="$1"; shift
    cstart="$1"; shift
    cend="$1"; shift
    ccolor="$1"; shift

    cols=$(tput cols)
    hdr="${char}${char}${cstart}$*${cend}"
    rem=$(( cols - ${#hdr} ))
    # when SHELL=dash, ${#hdr} is 4 chars smaller
    [ -z "$BASH" ] && rem=$(( rem + 4 ))

    for i in $(seq 1 $rem)
    do
        hdr="$hdr$char"
    done

    printf "${ccolor}${hdr}${MPVC_CRST}\n"
}

mpvctui_header0() { mpvctui_headerc '═' '[' ']' "$MPVC_COLOR0" " * $* "; }
mpvctui_header1() { mpvctui_headerc '─' '[' ']' "$MPVC_COLOR1" " + $* "; }
mpvctui_header2() { mpvctui_headerc '─' '─' '─' "$MPVC_COLOR1" "─"; }

mpvctui_tips()
{
    [ "$MPVC_TIPS" = "false" ] && return
    tip=$(( count % 50 ))
    case $tip in
    0|1)  echo ": type control+c to enter prompt";;
    10|11) echo ": check $PROGURL/wiki for more tips!";;
    20|21) echo ": change theme at ${MPVC_CONFIG##$HOME/}";;
    30|31) echo ": version $PROGNAME $PROGVERSION at $PROGURL";;
    40|41) echo ": update $MPVC_UPDATEC secs refresh $((count % MPVC_CLEARC))/$MPVC_CLEARC";;
    esac
}

mpvctui_watcher()
{
    mpvctui_header0 "Running ${PROGNAME%%.sh}$(mpvctui_tips)"
    mpvctui_header1 "Status"
    mpvc status
    mpvctui_header1 "Playlist"
    mpvc playlist
    #mpvctui_header2 ""
}

mpvctui_input()
{
    read -r -p "mpvc: " cmd
    case "$cmd" in
        mpvc*) QUIETFLAG=true $cmd;;
        pwd) pwd;;
        exit|quit|q) exit;;
        version) echo "version: $PROGNAME $PROGVERSION at $PROGURL";;
        *) echo 'mpvc: Type mpvc commands at "mpvc:" prompt, or "exit" to leave';;
    esac
    mpvctui_watch
}

mpvctui_watch()
{
    while sleep $MPVC_UPDATEC
    do
        output=$(mpvctui_watcher "$@" 2>&1)
        [ $(( count % MPVC_CLEARC )) -eq 0 ] && tput clear
        tput cup 0 0
        echo "$output"
        count=$(( count + 1 ))
    done
}

mpvctui_usage()
{
    echo "usage: $PROGNAME [$optflags] cmd # @version $PROGVERSION $PROGURL";
    exit;
}

optflags="0:1:d:hx"
main()
{
    mpvctui_config
    trap mpvctui_input INT
    while getopts "$optflags" flag;
    do
        case "$flag" in
        0) MPVC_COLOR0="$OPTARG";;
        1) MPVC_COLOR1="$OPTARG";;
        d) MPVC_DIR="$OPTARG"; cd "$MPVC_DIR" || return;;
        x) shift; command -v $MPVC_TERM && $MPVC_TERM -e "$0" "$@"; exit;;
        *) mpvctui_usage;;
        esac
    done
    shift $((OPTIND - 1));

    mpvctui_watch "$@"
}

main "$@"
