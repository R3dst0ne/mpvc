#!/bin/sh
#
# @file mpvc-chapter
# @description mpvc chapter auxiliar cmds (see mpvc chapter-list instead)
# @author gmt4 <gmt4 at github.com> (c) Copyright 2022 GPLv2+
# @url github.com/gmt4/mpvc
#

PROGNAME=${0##*/}
PROGVERSION="v1.5"
PROGAUTHOR=gmt4
PROGURL="https://github.com/gmt4/mpvc"

set -euf

# See https://ffmpeg.org/ffmpeg-formats.html#Metadata-1
mpvc_chapter_file()
{
    chaptersdir="$HOME/.config/mpvc/chapters/"
    chaptersfile="$chaptersdir/$(mpvc get path | sed 's/\//-/g; s/ /_/g; s/[&]//')"
    mkdir -p "$chaptersdir"
    echo "$chaptersfile"
}

mpvc_chapter_info()
{
    chaptersfile=${1:-$(mpvc_chapter_file)}

    if [ ! -e "$chaptersfile" ]; then echo "$PROGNAME: Not found $chaptersfile"; return; fi

    #echo "# $chaptersfile"
    awk '
        BEGIN{ chapter=0 }
        /^title=/ { title=$0; sub("^title= ", "", title); }
        /^START=/ { start=$2; }
        /\[CHAPTER\]/ { print start"\t"title; }
        END { print start"\t"title; }
    ' "$chaptersfile"
}

# usage: mpvc_chapter_gen < chapterlist.txt with timepos title entries
mpvc_chapter_gen()
{
    chaptersfile=${1:-$(mpvc_chapter_file)}

    while read line
    do
        timepos=$(echo "$line" | awk -v otp=${otimepos:-0} '{ tp=$1; if (tp ~ ":") { split(tp, a, ":"); tp = a[1]*60 + a[2] } print otp + tp; }')
        title=$(echo "$line" | awk '{ sub($1, ""); print }')
        mpvc_chapter_add_new "$chaptersfile" "$timepos" "$title"
        otimepos=$timepos
    done

    cat "$chaptersfile"
}

# usage: mpvc_chapter_add [timepos] [title]
mpvc_chapter_add()
{
    chaptersfile=$1; shift

    timepos=$(mpvc get time-pos)
    timepos=${timepos%%.*}
    mpvc_chapter_add_new "$chaptersfile" "$timepos" "$@"
}

# usage: mpvc_chapter_add_new [title], generates a ffmpeg metadata chapters file
mpvc_chapter_add_new()
{

    chaptersfile=$1; shift
    timepos=$1; shift
    path=$(mpvc get path)
    percentpos=$(mpvc get percent-pos)
    mediatitle=$(mpvc get media-title)

    if [ ! -s "$chaptersfile" ]
    then
        cat > "$chaptersfile" <<EOF
;FFMETADATA1
title=$mediatitle
;path=$path

#percent-pos=0
[CHAPTER]
TIMEBASE=1/1
START= 0
END= $timepos
title= 0 $@
EOF

    fi

    start_time=$(awk 'BEGIN{s=0} /^END= [0-9]+/ {s=$2} END{print s}' "$chaptersfile")
    end_time=$timepos
    chapter=$(awk 'BEGIN{s=0} /^title= [0-9]+/ {s=$2} END{print ++s}' "$chaptersfile")

    if [ "$#" -gt 0 ]
    then
        cat >>"$chaptersfile" <<EOF

#percent-pos=$percentpos
[CHAPTER]
TIMEBASE=1/1
START= $start_time
END= $end_time
title= $chapter $@
EOF
    fi

    #cat "$chaptersfile"
}

# usage mpvc_chapter_load chapters.txt ffmetadata chapter-file
mpvc_chapter_load()
{
    track=$(mpvc get playlist-pos)
    timepos=$(mpvc get time-pos)
    mpvc set chapters-file "$(mpvc_chapter_file)"
    mpvc play "$track"
    mpvc delay set time-pos "$timepos"
}

usage()
{
    echo "usage: $PROGNAME args # @version $PROGVERSION (c) $PROGAUTHOR $PROGURL"
    echo "  file : Show current ffmetadata chapter-file"
    echo "  info : Info current ffmetadata chapter-file"
    echo "  load : Load current ffmetadata chapter-file"
    echo "  add  : Add new chapter to current ffmetadata chapter-file"
    echo "  gen  : Gen a ffmetadata chapter-file from a < chapterlist.txt"
    exit;
}

main()
{
    if [ $# -lt 1 ]; then usage; fi

    case "$1" in
    file)   shift; mpvc_chapter_file "$@" ;;
    info)   shift; mpvc_chapter_info "$@" ;;
    load)   shift; mpvc_chapter_load "$@" ;;
    add)    shift; mpvc_chapter_add "$@" ;;
    gen)    shift; mpvc_chapter_gen "$@" ;;
    help)   shift; usage "$@" ;;
    *)      shift; usage "$@" ;;
    esac
}

main "$@"
